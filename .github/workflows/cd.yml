name: CD
on:
  push:
    branches:
      - 'release/**'
    tags:
      - 'iOS_v*'
      - 'macOS_v*'

  # Allows manual deployments from the Actions tab
  workflow_dispatch:
    inputs:
      lane:
        description: 'Fastlane lane to run (e.g. closed_beta)'
        required: false
        default: 'closed_beta'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploying to Testflight
    runs-on: macos-15

    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APP_ID: ${{ secrets.APP_ID }}
      WIDGETS_ID: ${{ secrets.WIDGETS_ID }}
      APP_APPLE_ID: ${{ secrets.APP_APPLE_ID }}
      AUTH_KEY_CONTENT: ${{ secrets.AUTH_KEY_CONTENT }}
      AUTH_KEY_ID: ${{ secrets.AUTH_KEY_ID }}
      AUTH_KEY_ISSUER_ID: ${{ secrets.AUTH_KEY_ISSUER_ID }}
      MATCH_GIT_AUTH: ${{ secrets.MATCH_GIT_AUTH }}
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
      TEAM_ID: ${{ secrets.TEAM_ID }}
      TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
      TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}          
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
      AZKAR_SUPABASE_API_URL: ${{ secrets.AZKAR_SUPABASE_API_URL }}
      AZKAR_SUPABASE_API_KEY: ${{ secrets.AZKAR_SUPABASE_API_KEY }}
      REVENUE_CAT_API_KEY: ${{ secrets.REVENUE_CAT_API_KEY }}
      SUPERWALL_API_KEY: ${{ secrets.SUPERWALL_API_KEY }}
      MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}

    steps:
      - uses: jdx/mise-action@v2

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Cache SwiftPM packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/org.swift.swiftpm
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Set Xcode IDE Preferences
        run: |
          sudo defaults write /Library/Preferences/com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES

      - name: Setup Secrets
        run: |
          ./scripts/configure_secrets.sh
  
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.5'
          bundler-cache: true

      - name: Install Fastlane Dependencies
        run: |
          gem install bundler
          bundle config set clean true
          bundle install

      - name: Generate Xcode project
        run: |
          mise install tuist
          mise x -- tuist install
          mise x -- tuist generate --no-open

      - name: Determine lane
        id: lane
        run: |
          lane="${{ github.event.inputs.lane }}"
          if [ -z "$lane" ]; then
            lane="closed_beta"
          fi
          if [[ "$GITHUB_REF" == refs/tags/iOS_v* ]]; then
            lane="release"
          elif [[ "$GITHUB_REF" == refs/tags/macOS_v* ]]; then
            lane="app_store_release"
          fi
          echo "lane=$lane" >> "$GITHUB_OUTPUT"

      - name: Deploy using Fastlane
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: ${{ steps.lane.outputs.lane }}
